<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.17.0@c620f6e80d0abfca532b00bda366062aaedf6e5d">
  <file src="src/Cache.php">
    <DocblockTypeContradiction>
      <code>! is_string($filename)</code>
      <code>! is_string($filename)</code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code>static function ($errno, $errstr): void {
            // swallow errors; method returns false on failure
        }</code>
      <code>static function ($errno, $errstr): void {
            // swallow errors; method returns false on failure
        }</code>
    </InvalidArgument>
    <RedundantConditionGivenDocblockType>
      <code>is_string($filename)</code>
    </RedundantConditionGivenDocblockType>
    <UnusedClosureParam>
      <code>$errno</code>
      <code>$errno</code>
      <code>$errstr</code>
      <code>$errstr</code>
    </UnusedClosureParam>
  </file>
  <file src="src/Client.php">
    <DeprecatedInterface>
      <code>Client</code>
    </DeprecatedInterface>
    <DocblockTypeContradiction>
      <code><![CDATA[$httpRequest->getUriString() === null]]></code>
    </DocblockTypeContradiction>
    <PossiblyInvalidMethodCall>
      <code>addHeaderLine</code>
      <code>addHeaders</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
    </PossiblyInvalidMethodCall>
    <PossiblyNullReference>
      <code>getMessage</code>
    </PossiblyNullReference>
    <PossiblyUndefinedMethod>
      <code>addHeaderLine</code>
      <code>addHeaders</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
    </PossiblyUndefinedMethod>
    <PropertyNotSetInConstructor>
      <code>$lastRequest</code>
      <code>$lastResponse</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Request.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->methodRegex]]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code>! is_string($key)</code>
    </DocblockTypeContradiction>
    <MissingConstructor>
      <code>$method</code>
    </MissingConstructor>
    <MixedArgument>
      <code>$options</code>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$key</code>
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$options</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->id]]></code>
    </MixedReturnStatement>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[null !== ($id = $this->getId())]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Request/Http.php">
    <PossiblyUnusedMethod>
      <code>getRawJson</code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code>Http</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Response.php">
    <MissingConstructor>
      <code>$id</code>
      <code>$id</code>
      <code>$serviceMap</code>
      <code>$serviceMap</code>
    </MissingConstructor>
    <MixedArgument>
      <code><![CDATA[$error['message']]]></code>
      <code>$value</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$errorData</code>
      <code><![CDATA[$response['result']]]></code>
      <code><![CDATA[$this->error]]></code>
      <code><![CDATA[$this->id]]></code>
      <code>$value</code>
    </MixedAssignment>
    <PossiblyNullReference>
      <code>toArray</code>
    </PossiblyNullReference>
    <PossiblyUnusedMethod>
      <code>getArgs</code>
      <code>setArgs</code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code>(string) $version</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Server.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$callback->getClass()]]></code>
      <code><![CDATA[$callback->getFunction()]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedInterface>
      <code>Server</code>
    </DeprecatedInterface>
    <DeprecatedMethod>
      <code>_buildSignature</code>
      <code>_buildSignature</code>
      <code>_dispatch</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction>
      <code><![CDATA[null === $request->getMethod()]]></code>
      <code><![CDATA[null === $this->request]]></code>
      <code><![CDATA[null === $this->response]]></code>
      <code><![CDATA[null === $this->serviceMap]]></code>
    </DocblockTypeContradiction>
    <ImplementedParamTypeMismatch>
      <code>$function</code>
    </ImplementedParamTypeMismatch>
    <ImplementedReturnTypeMismatch>
      <code>Server</code>
      <code>Server</code>
      <code>self</code>
    </ImplementedReturnTypeMismatch>
    <MissingClosureReturnType>
      <code>static function ($count, $param) {</code>
    </MissingClosureReturnType>
    <MixedArgument>
      <code>$argv</code>
      <code>$method</code>
      <code>$method</code>
      <code>$method</code>
      <code>$method</code>
      <code>$param</code>
      <code><![CDATA[$params[$key]['type']]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$param['name']]]></code>
      <code><![CDATA[$param['optional']]]></code>
    </MixedArrayAccess>
    <MixedArrayAssignment>
      <code><![CDATA[$parameter->getType()]]></code>
    </MixedArrayAssignment>
    <MixedArrayOffset>
      <code><![CDATA[$args[$param['name']]]]></code>
      <code><![CDATA[$args[$param['name']]]]></code>
      <code>$params[$key]</code>
      <code>$params[$key]</code>
      <code>$params[$key]</code>
      <code>$params[$key]</code>
      <code>$params[$key]</code>
      <code>$params[$key]</code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code><![CDATA[$args[$param['name']]]]></code>
      <code>$count</code>
      <code>$default</code>
      <code>$description</code>
      <code>$key</code>
      <code>$method</code>
      <code>$method</code>
      <code>$method</code>
      <code>$newType</code>
      <code><![CDATA[$orderedParams[$refParam->getName()]]]></code>
      <code>$param</code>
      <code>$parameter</code>
      <code><![CDATA[$params[$key]['default']]]></code>
      <code><![CDATA[$params[$key]['description']]]></code>
      <code>$prototype</code>
      <code>$prototype</code>
      <code>$requiredParamsCount</code>
      <code>$result</code>
      <code>$return[]</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>string|array</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>getDefaultValue</code>
      <code>getDescription</code>
      <code>getName</code>
      <code>getParameterObjects</code>
      <code>getReturnType</code>
      <code>getType</code>
      <code>getType</code>
      <code>getType</code>
      <code>isOptional</code>
    </MixedMethodCall>
    <MixedOperand>
      <code>$count</code>
    </MixedOperand>
    <MixedReturnStatement>
      <code>$return[0]</code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$class</code>
      <code>$fault</code>
      <code>$request</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code><![CDATA[$e->getCode()]]></code>
      <code>$function</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast>
      <code>$function</code>
    </PossiblyInvalidCast>
    <PossiblyInvalidMethodCall>
      <code>getParams</code>
    </PossiblyInvalidMethodCall>
    <PossiblyNullArgument>
      <code>$argv</code>
      <code>$argv</code>
      <code><![CDATA[$callback->getClass()]]></code>
      <code><![CDATA[$callback->getFunction()]]></code>
      <code><![CDATA[$callback->getMethod()]]></code>
      <code>$invokable</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedVariable>
      <code>$method</code>
    </PossiblyUndefinedVariable>
    <PossiblyUnusedReturnValue>
      <code>Error|null</code>
    </PossiblyUnusedReturnValue>
    <PropertyNotSetInConstructor>
      <code>$request</code>
      <code>$response</code>
      <code>$serviceMap</code>
      <code>$smdMethods</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(bool) $flag</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[null !== $this->smdMethods]]></code>
      <code><![CDATA[null !== ($id = $request->getId())]]></code>
      <code><![CDATA[null !== ($version = $request->getVersion())]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Smd.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->contentTypeRegex]]></code>
    </ArgumentTypeCoercion>
    <MissingConstructor>
      <code>$description</code>
      <code>$id</code>
      <code>$target</code>
    </MissingConstructor>
    <MixedArgument>
      <code>$param</code>
      <code>$service</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$param</code>
      <code>$service</code>
      <code><![CDATA[$service['services'][$name]]]></code>
      <code>$svc</code>
      <code>$svc</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>bool|Smd\Service</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>getParams</code>
      <code>setEnvelope</code>
      <code>toArray</code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$this->services[$name]]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedReturnValue>
      <code>self</code>
    </PossiblyUnusedReturnValue>
    <RedundantCastGivenDocblockType>
      <code>(bool) $flag</code>
      <code>(string) $description</code>
      <code>(string) $id</code>
      <code>(string) $target</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[null !== ($id = $this->getId())]]></code>
      <code><![CDATA[null !== ($target = $this->getTarget())]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Smd/Service.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->nameRegex]]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code><![CDATA[! is_string($type) && ! is_array($type)]]></code>
      <code><![CDATA[! is_string($type) && ! is_array($type)]]></code>
      <code>is_string($type)</code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code>$order</code>
      <code>$paramType</code>
      <code>$returnType</code>
      <code>$type</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$key</code>
      <code>$key</code>
      <code><![CDATA[$this->envelopeTypes]]></code>
      <code><![CDATA[$this->transportTypes]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$param['order']]]></code>
      <code><![CDATA[$param['order']]]></code>
      <code><![CDATA[$param['param']]]></code>
      <code><![CDATA[$param['param']]]></code>
    </MixedArrayAccess>
    <MixedArrayOffset>
      <code><![CDATA[$params[$param['order']]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$callback</code>
      <code>$order</code>
      <code>$param</code>
      <code>$paramOptions[$key]</code>
      <code>$paramType</code>
      <code>$paramType</code>
      <code>$params[$index]</code>
      <code><![CDATA[$params[$param['order']]]]></code>
      <code>$returnType</code>
      <code>$type</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedFunctionCall>
      <code>$callback($value)</code>
    </MixedFunctionCall>
    <MixedInferredReturnType>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code>$paramType</code>
    </MixedReturnStatement>
    <NoValue>
      <code>$type</code>
    </NoValue>
    <PossiblyUnusedReturnValue>
      <code>self</code>
    </PossiblyUnusedReturnValue>
    <RedundantCastGivenDocblockType>
      <code>(string) $target</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code>is_array($spec)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="test/CacheTest.php">
    <PossiblyFalseArgument>
      <code><![CDATA[$this->cacheFile]]></code>
      <code><![CDATA[$this->cacheFile]]></code>
      <code><![CDATA[$this->cacheFile]]></code>
      <code><![CDATA[$this->cacheFile]]></code>
      <code><![CDATA[$this->cacheFile]]></code>
      <code><![CDATA[$this->cacheFile]]></code>
      <code><![CDATA[$this->cacheFile]]></code>
    </PossiblyFalseArgument>
  </file>
  <file src="test/ClientTest.php">
    <InvalidArgument>
      <code>Exception\ExceptionInterface::class</code>
    </InvalidArgument>
    <PossiblyUnusedMethod>
      <code>makeHttpResponseFor</code>
      <code>mockHttpClient</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/ErrorTest.php">
    <MixedArgument>
      <code>Json\Json::decode($json, Json\Json::TYPE_ARRAY)</code>
      <code>Json\Json::decode($json, Json\Json::TYPE_ARRAY)</code>
    </MixedArgument>
    <MixedInferredReturnType>
      <code>array</code>
    </MixedInferredReturnType>
    <RedundantCondition>
      <code>assertIsArray</code>
    </RedundantCondition>
  </file>
  <file src="test/RequestTest.php">
    <InvalidArgument>
      <code>$spec[1]</code>
    </InvalidArgument>
    <MixedAssignment>
      <code>$test</code>
    </MixedAssignment>
  </file>
  <file src="test/ResponseTest.php">
    <MixedArrayAccess>
      <code><![CDATA[$test['error']['code']]]></code>
      <code><![CDATA[$test['error']['message']]]></code>
    </MixedArrayAccess>
    <PossiblyInvalidArgument>
      <code>$version</code>
    </PossiblyInvalidArgument>
    <PossiblyNullReference>
      <code>getCode</code>
      <code>getData</code>
      <code>getMessage</code>
    </PossiblyNullReference>
  </file>
  <file src="test/ServerTest.php">
    <InvalidArgument>
      <code>$object</code>
      <code>$object</code>
      <code>new Json\Json()</code>
    </InvalidArgument>
    <InvalidCast>
      <code>$object</code>
      <code>$object</code>
      <code>new Json\Json()</code>
    </InvalidCast>
    <MixedArgument>
      <code><![CDATA[$decoded['result']]]></code>
    </MixedArgument>
    <MixedMethodCall>
      <code>setContentType</code>
      <code>setContentType</code>
      <code>setDescription</code>
      <code>setDescription</code>
      <code>setEnvelope</code>
      <code>setEnvelope</code>
      <code>setId</code>
      <code>setId</code>
      <code>setTarget</code>
      <code>setTarget</code>
    </MixedMethodCall>
    <PossiblyNullReference>
      <code>getCallback</code>
      <code>getCode</code>
      <code>getCode</code>
      <code>getCode</code>
      <code>getCode</code>
      <code>getCode</code>
      <code>getCode</code>
      <code>getCode</code>
      <code>getMessage</code>
      <code>getResult</code>
      <code>getResult</code>
      <code>getResult</code>
      <code>getResult</code>
    </PossiblyNullReference>
    <RedundantConditionGivenDocblockType>
      <code>assertIsArray</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="test/Smd/ServiceTest.php">
    <InvalidArgument>
      <code>123</code>
      <code>new stdClass()</code>
      <code>new stdClass()</code>
    </InvalidArgument>
    <MixedArgument>
      <code>$params</code>
      <code>$params</code>
      <code>$params</code>
      <code>$params</code>
      <code>$smd</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$param['default']]]></code>
      <code><![CDATA[$param['description']]]></code>
      <code><![CDATA[$param['name']]]></code>
      <code><![CDATA[$param['name']]]></code>
      <code><![CDATA[$param['optional']]]></code>
      <code><![CDATA[$param['type']]]></code>
      <code><![CDATA[$param['type']]]></code>
      <code><![CDATA[$param['type']]]></code>
      <code><![CDATA[$param['type']]]></code>
      <code><![CDATA[$param['type']]]></code>
      <code><![CDATA[$param['type']]]></code>
      <code><![CDATA[$param['type']]]></code>
      <code><![CDATA[$param['type']]]></code>
      <code><![CDATA[$param['type']]]></code>
      <code><![CDATA[$param['type']]]></code>
      <code><![CDATA[$param['type']]]></code>
      <code><![CDATA[$smd['foo']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$param</code>
      <code>$param</code>
      <code>$param</code>
      <code>$param</code>
      <code>$param</code>
      <code>$param</code>
      <code>$param</code>
      <code>$param</code>
      <code>$param</code>
      <code>$param</code>
      <code>$param</code>
      <code>$param</code>
      <code>$params</code>
      <code>$smd</code>
    </MixedAssignment>
    <NullArgument>
      <code>null</code>
      <code>null</code>
    </NullArgument>
  </file>
  <file src="test/SmdTest.php">
    <InvalidArgument>
      <code>$service</code>
    </InvalidArgument>
    <MixedArgument>
      <code>$bar</code>
      <code>$bar</code>
      <code>$bar</code>
      <code>$foo</code>
      <code>$foo</code>
      <code>$foo</code>
      <code>$methods</code>
      <code>$methods</code>
      <code>$methods</code>
      <code>$services</code>
      <code>$services</code>
      <code>$services</code>
      <code>$smd</code>
      <code>$smd</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$bar['name']]]></code>
      <code><![CDATA[$bar['parameters']]]></code>
      <code><![CDATA[$bar['serviceURL']]]></code>
      <code><![CDATA[$foo['name']]]></code>
      <code><![CDATA[$foo['parameters']]]></code>
      <code><![CDATA[$foo['serviceURL']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$bar</code>
      <code>$foo</code>
      <code>$methods</code>
      <code>$services</code>
      <code>$smd</code>
      <code>$smd</code>
    </MixedAssignment>
    <RedundantCondition>
      <code>assertIsArray</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code>assertIsArray</code>
      <code>assertIsArray</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="test/TestAsset/Bar.php">
    <MissingParamType>
      <code>$someval</code>
    </MissingParamType>
    <MissingPropertyType>
      <code>$val</code>
    </MissingPropertyType>
    <PossiblyUnusedMethod>
      <code>baz</code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedReturnValue>
      <code>array</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="test/TestAsset/Foo.php">
    <PossiblyUnusedMethod>
      <code>bar</code>
      <code>baz</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/TestAsset/FooParameters.php">
    <PossiblyUnusedMethod>
      <code>bar</code>
      <code>baz</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/TestAsset/JsonSerializableBuiltinImpl.php">
    <UnusedClass>
      <code>JsonSerializableBuiltinImpl</code>
    </UnusedClass>
  </file>
  <file src="test/TestAsset/TestIteratorAggregate.php">
    <UnusedClass>
      <code>TestIteratorAggregate</code>
    </UnusedClass>
  </file>
</files>
